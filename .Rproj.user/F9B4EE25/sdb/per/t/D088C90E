{
    "contents" : "# This R script does the following: \n# 1.Merges the training and the test sets to create one data set.\n# 2.Extracts only the measurements on the mean and standard deviation for each measurement. \n# 3.Uses descriptive activity names to name the activities in the data set\n# 4.Appropriately labels the data set with descriptive variable names. \n# 5.From the data set in step 4, creates a second, independent tidy \n#   data set with the average of each variable for each activity and each subject.\n\n# Raw data source:\n# https://d396qusza40orc.cloudfront.net/getdata%2Fprojectfiles%2FUCI%20HAR%20Dataset.zip\n\nlibrary(plyr)\n\n# Once the date is downloaded is stored on the working directory on the following folder\ndir.name<-\"UCI HAR Dataset\"\n\n# Read files\nX_test <-read.table(file.path(dir.name, \"test\", \"X_test.txt\"), header=FALSE) #Features\nX_train<-read.table(file.path(dir.name, \"train\", \"X_train.txt\"), header=FALSE) #Features\nS_test <-read.table(file.path(dir.name, \"test\", \"subject_test.txt\"), header=FALSE) # Subject\nS_train<-read.table(file.path(dir.name, \"train\", \"subject_train.txt\"), header=FALSE) # Subject\nY_test <-read.table(file.path(dir.name, \"test\", \"y_test.txt\"), header=FALSE) # Activity\nY_train<-read.table(file.path(dir.name, \"train\", \"y_train.txt\"), header=FALSE) # Activity\n\nActivityLabels <-read.table(file.path(dir.name, \"activity_labels.txt\"),head=FALSE) # Read activity labels\n\n######################################################################\n# Step 1: Merge the training and the test sets to create one data set.\n######################################################################\n\n# Bind data\nX <-rbind(X_test,X_train) # Bind Features\nS <-rbind(S_test,S_train) # Bind Subject\nY <-rbind(Y_test,Y_train) # Bind Activity\n\n# Set names to variables\nnames(S)<-c(\"Subject\")\nnames(Y)<-c(\"Activity\")\nFeaturesNames <- read.table(file.path(dir.name, \"features.txt\"),head=FALSE)\nnames(X)<- FeaturesNames$V2\n\n# Create new data set\ndataset<-cbind(S,Y,X)\n\n#########################################################################################################\n# Step 2: Extracts only the measurements on the mean and standard deviation for each measurement.\n#########################################################################################################\n\n# Limits the features to those that include mean() or std()\nmean_std <-X[,grep(\"(mean|std)\\\\(\",names(X))]\ndataset_mean_std <- cbind(S,Y,mean_std)\n\n################################################################################\n# Step 3: Uses descriptive activity names to name the activities in the data set.\n################################################################################\n\n# Update activity labels of the activities\nY$Activity <- ActivityLabels[match(Y$Activity, ActivityLabels$V1), \"V2\"]\n\n################################################################################\n# Step 4: Appropriately labels the data set with descriptive variable names. \n################################################################################\n\n# where t -> Time, f ->Frequency, mean()->Mean, std()->StandardDev, BodyBody -> Body\n# \"-\" in between words and some more cleaning to separate words with hyphens\n\nnames(mean_std)<-gsub(\"^t\", \"Time-\", names(mean_std))\nnames(mean_std)<-gsub(\"^f\", \"Frequency-\", names(mean_std))\nnames(mean_std)<-gsub(\"mean\\\\(\\\\)\", \"Mean\", names(mean_std))\nnames(mean_std)<-gsub(\"std\\\\(\\\\)\", \"StandardDev\", names(mean_std))\nnames(mean_std)<-gsub(\"BodyBody\", \"Body\", names(mean_std))\nnames(mean_std)<-gsub(\"Body\", \"Body-\", names(mean_std))\nnames(mean_std)<-gsub(\"Gravity\", \"Gravity-\", names(mean_std))\nnames(mean_std)<-gsub(\"Mag-\", \"-Magnitude-\", names(mean_std))\nnames(mean_std)<-gsub(\"Jerk-\", \"-Jerk-\", names(mean_std))\n\n################################################################################\n# Step 5: From the data set in step 4, creates a second, independent tidy \n# data set with the average of each variable for each activity and each subject.\n################################################################################\n\nnew_ds <- cbind(S,Y,mean_std)\ntidy<-ddply(new_ds, c(\"Subject\", \"Activity\"), numcolwise(mean))\nwrite.table(tidy,file=\"tidy.txt\", row.name=FALSE) #create txt-file with tidy data\n\n",
    "created" : 1437179439702.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "2311182239",
    "id" : "D088C90E",
    "lastKnownWriteTime" : 1437595666,
    "path" : "C:/Users/Javier/Desktop/Coursera_DataCleaning/Project/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
        "tempName" : "Untitled1"
    },
    "source_on_save" : false,
    "type" : "r_source"
}